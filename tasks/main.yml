---

- name: Create Demo Organization
  tower_organization:
    name: "{{ tower_org }}"
    description: "Red Hat Demo"
    state: present
  tags: tower-insights

- name: Copy root key across
  copy:
    src: /root/.ssh/id_rsa
    dest: /root/
  tags: tower-insights

- name: Create root user credential
  tower_credential:
    name: root
    username: root
    ssh_key_data: /root/id_rsa
    state: present
    organization: "{{ tower_org }}"
    kind: ssh
  tags: tower-insights

- name: Remove root key
  file:
    path: /root/id_rsa
    state: absent
  tags: tower-insights

- name: Create Insights credential
  tower_credential:
    name: Insights
    username: "{{ insights_user }}"
    password: "{{ insights_password }}"
    state: present
    organization: "{{ tower_org }}"
    kind: insights
  tags: tower-insights

- name: Create Demo Inventory
  shell: tower-cli inventory create --name demo --organization "{{ tower_org }}" --insights-credential Insights -v
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create groups
  tower_group:
    name: "{{ item }}"
    inventory: "demo"
    state: present
  with_items:
    - webservers
    - loadbalancers
  tags: tower-insights

- name: Add Hosts
  tower_host:
    name: "{{ item.host }}"
    state: present
    inventory: demo
    variables:
      ansible_host: "{{ item.ansible_host }}"
  with_items: "{{ demo_hosts }}"
  tags: tower-insights

- name: Associate hosts to groups
  shell: tower-cli host associate --host "{{ item.host }}" --group "{{ item.group }}" -v
  with_items: "{{ demo_hosts }}" 
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create Insights Project
  shell: tower-cli project create --name Insights --organization "{{ tower_org }}" --scm-type insights --scm-credential Insights --scm-update-on-launch true --scm-delete-on-update true --scm-clean true -v
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create Insights Scan Project
  shell: 'tower-cli project create --name "Insights Scan" --organization "{{ tower_org }}" --scm-type git --scm-url https://github.com/ansible/awx-facts-playbooks --scm-update-on-launch true --scm-delete-on-update true --scm-clean true --monitor -v'
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create Insights scan job template
  tower_job_template:
    name: "Insights Scan"
    job_type: "run"
    inventory: "demo"
    project: "Insights Scan"
    playbook: "scan_facts.yml"
    credential: "root"
    state: "present"
    fact_caching_enabled: yes
  tags: tower-insights

- name: Create demo Project
  shell: 'tower-cli project create --name demo --organization "{{ tower_org }}" --scm-type git --scm-url https://github.com/pharriso/ansible-lb-demo.git --scm-update-on-launch true --scm-delete-on-update true --scm-clean true --monitor -v'
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create rhsm custom credential
  tower_credential_type:
    name: rhsm
    kind: cloud
    state: present
    inputs: "{{ lookup('file', 'rhsm_credential_input.json') }}"
    injectors: "{{ lookup('file', 'rhsm_credential_injector.json') }}"
  tags: tower-insights

- name: Create rhsm credential
  shell: "tower-cli credential create --organization {{ tower_org }} --credential-type rhsm --inputs='{ rhsm_org: \"{{ rhsm_org }}\", rhsm_key: \"{{ rhsm_key }}\" }' --name rhsm -v"
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create VM create job template
  tower_job_template:
    name: "{{ item.name }}"
    job_type: "run"
    inventory: "demo"
    project: "demo"
    playbook: "{{ item.playbook }}"
    ask_limit: "{{ item.limit | default(\"no\") }}"
    credential: "root"
    state: "present"
    fact_caching_enabled: yes
  with_items:
    - { "name": "Create VM", "playbook": "create_libvirt_vm.yml" }
    - { "name": "Register to Satellite", "playbook": "register_satellite.yaml" }
    - { "name": "Configure Webserver", "playbook": "deploy_web.yaml", "limit": "yes" }
    - { "name": "Configure loadbalancer", "playbook": "deploy_lb.yaml", "limit": "yes" }
    - { "name": "Install Insights", "playbook": "install_insights.yaml" }
    - { "name": "Rolling Update", "playbook": "rolling_update.yaml" }
  tags: tower-insights

- name: Associate RHSM credential 
  shell: tower-cli job_template associate_credential --job-template "Register to Satellite" --credential rhsm -v 
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create Workflow Template
  tower_workflow_template:
    name: Deploy App
    organization: "{{ tower_org }}"
    schema: "{{ lookup('file', 'workflow.yaml') }}"
  tags: tower-insights

- name: Create cfgmgmt Project
  shell: 'tower-cli project create --name cfgmgmt --organization "{{ tower_org }}" --scm-type git --scm-url https://github.com/pharriso/ansible-cfgmgmt-demo.git --scm-update-on-launch true --scm-delete-on-update true --scm-clean true --monitor -v'
  register: cli_out
  changed_when: "'Resource changed' in cli_out.stdout"
  tags: tower-insights

- name: Create cfgmgmt job template
  tower_job_template:
    name: "{{ item.name }}"
    job_type: "run"
    inventory: "demo"
    project: "cfgmgmt"
    playbook: "{{ item.playbook }}"
    ask_limit: "{{ item.limit | default(\"no\") }}"
    credential: "root"
    state: "present"
    fact_caching_enabled: yes
  with_items:
    - { "name": "Config Management", "playbook": "linux_common.yml" }
  tags: tower-insights
